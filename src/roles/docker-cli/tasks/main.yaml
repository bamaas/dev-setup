---

- name: Install prerequisites
  apt:
    name:
      - ca-certificates
      - curl
      - gnupg2
      - lsb-release
      - apt-transport-https

- name: Add Docker apt repo
  shell: |
    set -o pipefail
    echo "deb [arch=amd64] https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]') $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list
    apt-get update
  args:
    executable: "{{ ansible_user_shell }}"

- name: Add Docker apt key
  shell: |
    set -o pipefail
    curl -fsSL https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]')/gpg | apt-key add - 2>/dev/null
  args:
    executable: "{{ ansible_user_shell }}"

- name: Install docker-ce-cli
  apt:
    name:
      - docker-ce-cli
    update_cache: true

- name: Ensure directories exist
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - /etc/docker
    - ~{{ ansible_username }}/.docker
    - ~root/.docker

- name: Add local user to docker group
  user:
    name: "{{ ansible_username }}"
    groups: docker
    append: true

- name: Switch to the legacy variant of iptables
  alternatives:
    name: iptables
    path: /usr/sbin/iptables-legacy
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '22.04'

- name: Install docker-compose
  pip:
    name:
      - setuptools==58.0.3
      - wheel==0.37.0
      - docker-compose==1.29.2

- name: Set docker aliases
  lineinfile:
    path: "~{{ ansible_username }}/.profile"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - regexp: |
        alias d='docker '
      line: |
        alias d='docker '
    - regexp: |
        alias dc='docker-compose '
      line: |
        alias dc='docker-compose '
