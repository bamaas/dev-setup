---

- name: Install dependency apt packages
  apt:
    install_recommends: false
    name:
      - make
      - build-essential
      - libssl-dev
      - zlib1g-dev
      - libbz2-dev
      - libreadline-dev
      - libsqlite3-dev
      - wget
      - curl
      - llvm
      - libncurses5-dev
      - xz-utils
      - tk-dev
      - libxml2-dev
      - libxmlsec1-dev
      - libffi-dev
      - liblzma-dev
      - python3-openssl
      - git
  when: ansible_pkg_mgr == 'apt'

- name: Install dependency homebrew packages
  homebrew:
    name:
      - openssl
      - readline
      - sqlite3
      - xz
      - zlib
      - tcl-tk@8
  when: ansible_pkg_mgr == 'homebrew'

- name: Install python versions
  shell: |
    eval "$(mise activate bash)" && \
    mise install python@{{ item }}
  become: false
  args:
    executable: "{{ ansible_user_shell }}"
  loop: "{{ python_versions }}"

- name: Install python packages
  shell: |
    eval "$(mise activate bash)" && \
    pip install {{ item }}
  become: false
  args:
    executable: "{{ ansible_user_shell }}"
  loop: "{{ python_packages }}"

- name: Install pipx
  shell: |
    eval "$(mise activate bash)" && \
    pip install pipx
  become: false
  args:
    executable: "{{ ansible_user_shell }}"

- name: Ensure pipx path
  shell: |
    eval "$(mise activate bash)" && \
    pipx ensurepath
  become: false
  args:
    executable: "{{ ansible_user_shell }}"

- name: Intall Python CLI tools
  shell: |
    eval "$(mise activate bash)" && \
    pipx install {{ item }}
  become: false
  args:
    executable: "{{ ansible_user_shell }}"
  loop: "{{ python_cli_tools }}"

