---
- name: Determine whether OpenShift CLI is already installed with the desired version
  shell: "set -o pipefail && (oc version || true) | (grep {{ openshift_cli_version }} || true) | wc -l"
  args:
    executable: "{{ ansible_user_shell }}"
  register: oc_installed
  changed_when: oc_installed.rc != 0

- name: Install OpenShift CLI binary
  when: oc_installed.stdout != '1'
  block:
    - name: Create temporary directory for OpenShift CLI binary
      delegate_to: localhost
      become: false
      tempfile:
        state: directory
        suffix: ocbin
      register: tmpdir_ocbin

    - name: Download OpenShift CLI binary to controller
      delegate_to: localhost
      unarchive:
        src: "https://github.com/okd-project/okd/releases/download/{{ openshift_cli_version }}/openshift-client-mac-{{ 'arm64-' if ansible_architecture == 'arm64' else '' }}{{ openshift_cli_version }}.tar.gz"
        dest: '{{ tmpdir_ocbin.path }}'
        remote_src: true
        list_files: yes
      when: ansible_pkg_mgr == 'homebrew'

    - name: Download OpenShift CLI binary to controller
      delegate_to: localhost
      unarchive:
        src: "https://github.com/okd-project/okd/releases/download/{{ openshift_cli_version }}/openshift-client-linux-{{ 'arm64-' if ansible_architecture == 'arm64' else '' }}{{ 'arm64-' if ansible_architecture == 'aarch64' else '' }}{{ openshift_cli_version }}.tar.gz"
        dest: '{{ tmpdir_ocbin.path }}'
        remote_src: true
        list_files: yes
      when: ansible_pkg_mgr == 'apt'

    - name: Copy oc binary to remote
      copy:
        src: "{{ tmpdir_ocbin.path }}/oc"
        dest: ~/.local/bin/oc
        mode: '0751'

# TODO: add to $PATH

  always:
    - name: Recursively remove temporary OpenShift CLI binary directory
      delegate_to: localhost
      file:
        path: "{{ tmpdir_ocbin.path }}"
        state: absent
